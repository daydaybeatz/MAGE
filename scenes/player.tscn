[gd_scene load_steps=31 format=3 uid="uid://bnrg2y6yyfgwu"]

[ext_resource type="Script" path="res://scripts/CanvasLayer.gd" id="1_0kysu"]
[ext_resource type="Texture2D" uid="uid://c2k0hh6xesjg0" path="res://textures/texture_dirt.png" id="1_003ta"]
[ext_resource type="Material" uid="uid://bxpejmo36j5d6" path="res://textures/skin_1.tres" id="2_ym077"]
[ext_resource type="Script" path="res://scripts/selector.gd" id="3_fusd2"]
[ext_resource type="Shader" path="res://scripts/pixelate.gdshader" id="4_gq05i"]
[ext_resource type="Texture2D" uid="uid://drx4udtnlg38r" path="res://textures/ui_box_1.png" id="5_30qmg"]
[ext_resource type="Texture2D" uid="uid://8y3h2hv8cr5e" path="res://textures/crosshair_5.png" id="5_qg2yq"]
[ext_resource type="ArrayMesh" uid="uid://8rudeqs3p51d" path="res://objects/pickaxe.obj" id="6_q6n2l"]
[ext_resource type="Texture2D" uid="uid://bedundxgpiqrc" path="res://textures/texture_stone.jpg" id="7_2vkkk"]
[ext_resource type="LabelSettings" uid="uid://cprcxoi0bhijf" path="res://textures/font_settings_1.tres" id="10_op6uk"]
[ext_resource type="AudioStream" uid="uid://3rie7q3qww5b" path="res://sounds/sfx_jump_2.wav" id="11_38ekj"]
[ext_resource type="Script" path="res://addons/grappling_hook_3d/src/hook_controller.gd" id="12_6jyms"]
[ext_resource type="AudioStream" uid="uid://bfv8nvtu5alpk" path="res://sounds/sfx_dash.wav" id="12_i1p3u"]
[ext_resource type="AudioStream" uid="uid://bxxk8p053i7e6" path="res://sounds/sfx_slide.wav" id="13_x3jmf"]

[sub_resource type="GDScript" id="GDScript_nrwjd"]
script/source = "extends CharacterBody3D

@onready var l_empty = $head/l_arm/l_empty
@onready var l_pickaxe = $head/l_arm/l_pickaxe
@onready var r_empty = $head/r_arm/r_empty
@onready var r_pickaxe = $head/r_arm/r_pickaxe

@onready var head = $head

@onready var spring_arm_3d = $head/SpringArm3D
@onready var flash_light = $head/flash_light

@onready var l_arm_mesh = $head/l_arm/l_empty/l_arm_mesh
@onready var l_pickaxe_mesh = $head/l_arm/l_pickaxe/l_pickaxe_mesh

@onready var r_arm_mesh = $head/r_arm/r_empty/r_arm_mesh
@onready var r_pickaxe_mesh = $head/r_arm/r_pickaxe/r_pickaxe_mesh

@onready var selector = $head/selector

@onready var camera_3d = $head/SpringArm3D/Camera3D

@onready var stone = $player_gui/ui_inventory/stone

@onready var audio_stream_jump = $audio_stream_jump
@onready var audio_stream_dash = $audio_stream_dash
@onready var audio_stream_slide = $audio_stream_slide



var sfx_jump_2 = preload(\"res://sounds/sfx_jump_2.wav\")
var sfx_dash = preload(\"res://sounds/sfx_dash.wav\")
var sfx_slide = preload(\"res://sounds/sfx_slide.wav\")

var swap=false

var current_speed = 7
const walking_speed = 7
const sprinting_speed = 18
const crouching_speed = 5

const jump_velocity = 7
#const big_jump_velocity = 16

const mouse_sens = 0.2

var just_dashed=false
var dc=0

var lerp_speed = 6
var jump_count =0
var direction = Vector3.ZERO

var crouching_depth = 0.3

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _ready():
	#camera_3d.transform()
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED) #constraints mouse
	flash_light.visible=false

func _input(event):

	#escape to exit

	if Input.is_action_just_pressed(\"escape\"):
		get_tree().quit()

#flash_light

	if Input.is_action_just_released(\"f\"):
		if flash_light.visible:
			flash_light.visible=false
		else:
			flash_light.visible=true
			
			
	if not Input.is_action_pressed(\"L_switch\") and not Input.is_action_pressed(\"R_switch\"):
		if Input.is_action_just_released(\"scroll_up\"):
			if flash_light.spot_angle>=25:
				flash_light.spot_angle-=5
				flash_light.spot_range-=.5
				flash_light.light_energy+=1
		if Input.is_action_just_released(\"scroll_down\"):
			if flash_light.spot_angle<=45:
				flash_light.spot_angle+=5
				flash_light.spot_range+=.5
				flash_light.light_energy-=1
	
	
		
	#inventory
	
	if Input.is_action_pressed(\"inventory\"):
		stone.visible=true
	else:
		stone.visible=false
	
	#hotbar
	
	if Input.is_action_just_pressed('1'):
		PlayerVariables.R_selector=PlayerVariables.L_selector
		PlayerVariables.L_selector=1

	if Input.is_action_just_pressed('2'):
		PlayerVariables.R_selector=PlayerVariables.L_selector
		PlayerVariables.L_selector=2

	if Input.is_action_just_pressed('3'):
		PlayerVariables.R_selector=PlayerVariables.L_selector
		PlayerVariables.L_selector=3

	if Input.is_action_just_pressed('4'):
		PlayerVariables.R_selector=PlayerVariables.L_selector
		PlayerVariables.L_selector=4

	if Input.is_action_just_pressed('5'):
		PlayerVariables.R_selector=PlayerVariables.L_selector
		PlayerVariables.L_selector=5

	if Input.is_action_just_pressed('6'):
		PlayerVariables.R_selector=PlayerVariables.L_selector
		PlayerVariables.L_selector=6

	if Input.is_action_just_pressed('7'):
		PlayerVariables.R_selector=PlayerVariables.L_selector
		PlayerVariables.L_selector=7

	if Input.is_action_just_pressed('8'):
		PlayerVariables.R_selector=PlayerVariables.L_selector
		PlayerVariables.L_selector=8

	if Input.is_action_just_pressed('9'):
		PlayerVariables.R_selector=PlayerVariables.L_selector
		PlayerVariables.L_selector=9

	if Input.is_action_just_pressed('0'):
		PlayerVariables.R_selector=PlayerVariables.L_selector
		PlayerVariables.L_selector=0
		
	
	
	if Input.is_action_pressed(\"L_switch\"):
		if Input.is_action_just_released(\"scroll_up\"):
			PlayerVariables.L_selector+=1
		if Input.is_action_just_released(\"scroll_down\"):
			PlayerVariables.L_selector-=1
		
	if Input.is_action_pressed(\"R_switch\"):
		if Input.is_action_just_released(\"scroll_up\"):
			PlayerVariables.R_selector+=1
		if Input.is_action_just_released(\"scroll_down\"):
			PlayerVariables.R_selector-=1
			
				
	#PlayerVariables.R_selector=round(PlayerVariables.R_selector)
	#PlayerVariables.L_selector=round(PlayerVariables.L_selector)
	#view

	if Input.is_action_pressed(\"view\"):
		if Input.is_action_just_released(\"scroll_up\") and spring_arm_3d.position.z>0:
			spring_arm_3d.transform.origin.z-=.5
			spring_arm_3d.transform.origin.y-=.1
			selector.target_position.y-=.10
		if Input.is_action_just_released(\"scroll_down\") and spring_arm_3d.position.z<5:
			spring_arm_3d.transform.origin.z+=.5
			spring_arm_3d.transform.origin.y+=.1
			selector.target_position.y+=.10
			
	#if Input.is_action_just_released(\"view\") and cam==2:
		#spring_arm_3d.transform.origin.z-=4
		#spring_arm_3d.transform.origin.y+=1
		#cam=1
	#else:
		#if Input.is_action_just_released(\"view\"):
			#spring_arm_3d.transform.origin.z+=4
			#spring_arm_3d.transform.origin.y-=1
			#cam=2
	
	
	if event is InputEventMouseMotion:
		rotate_y(deg_to_rad(-event.relative.x * mouse_sens))
		head.rotate_x(deg_to_rad(-event.relative.y * mouse_sens))
		head.rotation.x = clamp(head.rotation.x, deg_to_rad(-89), deg_to_rad(89))
	
func _physics_process(delta):
	
	#arm and tool visibility
	
	if PlayerVariables.L_selector==0:
		l_empty.visible=true
		l_pickaxe.visible=false
		
	if PlayerVariables.L_selector==1:
		l_pickaxe.visible=true
		l_empty.visible=false
	#else:
		#l_pickaxe.visible=false
		#l_empty.visible=false
		
	
	if PlayerVariables.R_selector==0:
		r_empty.visible=true
		r_pickaxe.visible=false
		
	if PlayerVariables.R_selector==1:
		r_pickaxe.visible=true
		r_empty.visible=false
	#else:
		#r_pickaxe.visible=false
		#r_empty.visible=false
	
	if PlayerVariables.stamina <100:
				PlayerVariables.stamina+=.02
				
	#cheat
	
	if just_dashed==true:
		print(just_dashed)

	#crouch

	if Input.is_action_pressed(\"crouch\") and is_on_floor():
		current_speed = crouching_speed
		head.position.y = lerp(head.position.y,1.0 - crouching_depth,delta*lerp_speed)
		
		
		
		if just_dashed==true:
			dc+=1
			if dc<25:
				if not audio_stream_slide.is_playing() and Input.is_action_pressed(\"sprint\"):
					audio_stream_slide.stream = sfx_slide
					audio_stream_slide.play()
				current_speed = sprinting_speed*3.8
				head.position.y = lerp(head.position.y,1.0 - 2.7,delta*lerp_speed)
			else:
				dc=0
				just_dashed=false
		#current_speed = crouching_speed
		#head.position.y = lerp(head.position.y,1.0 - crouching_depth,delta*lerp_speed)
	
	else:
		head.position.y = lerp(head.position.y,1.0,delta*lerp_speed)
		if Input.is_action_pressed(\"sprint\") and is_on_floor() and PlayerVariables.stamina>.05:
			current_speed=sprinting_speed
			if Input.get_vector(\"left\", \"right\", \"up\", \"down\"):
				PlayerVariables.stamina -= .05
			
			if Input.is_action_pressed(\"cheat\"):
				current_speed=sprinting_speed*25
				
		#if Input.is_action_just_released(\"sprint\") and not is_on_floor():
			#current_speed=sprinting_speed
			
	if Input.is_action_just_released(\"sprint\"):
		if is_on_floor():
			current_speed=walking_speed
			
		#else:
			#current_speed=sprinting_speed
			
			
	if is_on_floor() and not Input.is_action_pressed(\"sprint\"):
		
		current_speed=walking_speed
	# Add the gravity.
	if not is_on_floor():
		#if current_speed==sprinting_speed*1.7 and Input.is_action_just_pressed(\"ui_accept\"):
				#velocity.y = jump_velocity*1.4
		velocity.y -= gravity * delta
		
		
		#air dash
		
		if Input.is_action_just_released(\"ui_accept\") and PlayerVariables.stamina>3: 
			PlayerVariables.stamina-=3
			just_dashed=true
			current_speed=sprinting_speed*2.3
			if not audio_stream_dash.is_playing():
				audio_stream_dash.stream = sfx_dash
				audio_stream_dash.play()
			
	# Handle Jump.
	
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		
		#jump sound
		
		if not audio_stream_jump.is_playing():
			audio_stream_jump.stream = sfx_jump_2
			audio_stream_jump.play()
		#jump_count=jump_count+1
		#if Input.is_action_pressed(\"crouch\"):
			#velocity.y = big_jump_velocity
		if Input.is_action_pressed(\"cheat\"):
			velocity.y = jump_velocity*4
			current_speed=walking_speed*5
		else:
			velocity.y = jump_velocity
			if current_speed>0:
				PlayerVariables.stamina-=2.6
			
	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"left\", \"right\", \"up\", \"down\")
	direction = lerp(direction,(transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized(),delta*lerp_speed)
	if direction:
		velocity.x = direction.x * current_speed
		velocity.z = direction.z * current_speed
	else:
		velocity.x = move_toward(velocity.x, 0, current_speed)
		velocity.z = move_toward(velocity.z, 0, current_speed)
	#print(current_speed)
	move_and_slide()


"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_0aek6"]
margin = 0.914
radius = 0.6

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_34he7"]
albedo_color = Color(0.392157, 0.392157, 0.392157, 1)
albedo_texture = ExtResource("1_003ta")
disable_receive_shadows = true

[sub_resource type="CapsuleMesh" id="CapsuleMesh_mujcg"]
material = SubResource("StandardMaterial3D_34he7")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_lf0mm"]
render_priority = -1
shader = ExtResource("4_gq05i")

[sub_resource type="QuadMesh" id="QuadMesh_0ju1v"]

[sub_resource type="CylinderShape3D" id="CylinderShape3D_11so2"]

[sub_resource type="CylinderMesh" id="CylinderMesh_4i132"]
lightmap_size_hint = Vector2i(17, 19)
top_radius = 0.2
bottom_radius = 0.3
radial_segments = 8
rings = 1

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_fatml"]
albedo_color = Color(0.682353, 0.439216, 0.290196, 1)

[sub_resource type="CapsuleMesh" id="CapsuleMesh_mqckq"]
material = SubResource("StandardMaterial3D_fatml")
radius = 0.355
height = 2.683

[sub_resource type="CylinderMesh" id="CylinderMesh_7mtok"]
top_radius = 1.0
bottom_radius = 1.0
height = 1.367

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_mu1c1"]
albedo_texture = ExtResource("1_003ta")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_81udh"]
albedo_texture = ExtResource("7_2vkkk")

[sub_resource type="GDScript" id="GDScript_ojkxx"]
script/source = "extends Node3D

#respawns player when \"r\" is pressed, could add death respawns here

@onready var player = $\"..\"



# Called when the node enters the scene tree for the first time.
func _ready():
	pass

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta):
	if Input.is_action_pressed(\"respawn\"):
		
		player.position.x = 5
		player.position.y = 170
		player.position.z = 5
	
"

[sub_resource type="LabelSettings" id="LabelSettings_wtiho"]
font_size = 25
font_color = Color(0.635294, 0.635294, 0.635294, 1)
outline_size = 20
outline_color = Color(0.258824, 0.258824, 0.258824, 1)

[sub_resource type="LabelSettings" id="LabelSettings_hvgyn"]
font_size = 28
font_color = Color(0.2, 0.12549, 0.2, 1)
shadow_size = 10
shadow_color = Color(0.435294, 0.443137, 0.419608, 0.717647)

[node name="player" type="CharacterBody3D" groups=["player"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.723239, 0)
floor_stop_on_slope = false
floor_block_on_wall = false
floor_max_angle = 0.219911
script = SubResource("GDScript_nrwjd")

[node name="body" type="CollisionShape3D" parent="."]
transform = Transform3D(0.71, 0, 0, 0, 0.71, 0, 0, 0, 0.71, 0, -0.207108, 0.0963077)
shape = SubResource("CapsuleShape3D_0aek6")

[node name="body_mesh" type="MeshInstance3D" parent="body"]
transform = Transform3D(1.08, 0, 0, 0, 1.08, 0, 0, 0, 1.08, -0.021, 0.0470001, -0.026)
visible = false
transparency = 0.54
gi_mode = 0
visibility_range_begin = 2.5
mesh = SubResource("CapsuleMesh_mujcg")

[node name="head" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.0277712, 0.0861208)

[node name="selector" type="RayCast3D" parent="head"]
transform = Transform3D(0.975, 0, 0, 0, -0.0107204, -0.974941, 0, 0.974941, -0.0107204, 0, 0.155476, 0.488915)
target_position = Vector3(0, -5.585, 0)
collide_with_areas = true
collide_with_bodies = false
debug_shape_thickness = 3
script = ExtResource("3_fusd2")

[node name="Sprite3D" type="Sprite3D" parent="head/selector"]
transform = Transform3D(1.395, 0, 0, 0, -0.0367602, -1.39452, 0, 1.39452, -0.0367602, 0.00227294, -5.60529, 0.00268924)
cast_shadow = 0
offset = Vector2(-0.505, -1.61)
no_depth_test = true
render_priority = 2
texture = ExtResource("5_qg2yq")

[node name="SpringArm3D" type="SpringArm3D" parent="head"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.62935, 1.2638)
collision_mask = 3
margin = 0.735

[node name="Camera3D" type="Camera3D" parent="head/SpringArm3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.000557661, -1.61444)
current = true
fov = 57.0

[node name="RayCast3D" type="RayCast3D" parent="head/SpringArm3D/Camera3D"]
transform = Transform3D(1, 0, 0, 0, -0.0253395, -0.999679, 0, 0.999679, -0.0253395, 0, -0.529452, 0)
target_position = Vector3(0, -136.08, 0)

[node name="MeshInstance3D" type="MeshInstance3D" parent="head/SpringArm3D/Camera3D"]
transform = Transform3D(2.025, 0, 0, 0, 2.025, 0, 0, 0, 2.025, 0, 0, -0.82486)
material_override = SubResource("ShaderMaterial_lf0mm")
mesh = SubResource("QuadMesh_0ju1v")
surface_material_override/0 = SubResource("ShaderMaterial_lf0mm")

[node name="flash_light" type="SpotLight3D" parent="head"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.326234, 0.351963)
visible = false
light_color = Color(1, 1, 0.901961, 1)
light_energy = 10.023
light_indirect_energy = 0.0
light_volumetric_fog_energy = 0.0
light_specular = 0.0
shadow_enabled = true
shadow_blur = 6.233
distance_fade_enabled = true
distance_fade_begin = 46.55
distance_fade_shadow = 65.7
distance_fade_length = 457.03
spot_range = 658.252
spot_attenuation = 1.10957
spot_angle = 25.0
spot_angle_attenuation = 0.933035

[node name="r_arm" type="Node3D" parent="head"]

[node name="r_empty" type="CollisionShape3D" parent="head/r_arm"]
transform = Transform3D(-0.0596232, -0.0628328, 0.472119, -0.192875, 0.43823, 0.0339643, -0.435482, -0.18549, -0.079682, 1.04448, -0.452746, 0.166094)
shape = SubResource("CylinderShape3D_11so2")

[node name="r_arm_mesh" type="MeshInstance3D" parent="head/r_arm/r_empty"]
transform = Transform3D(1, 0, 0, -2.98023e-08, 1, -1.49012e-07, 7.45058e-09, -8.9407e-08, 1, 0.0108241, -0.000370026, 0.000119925)
material_override = ExtResource("2_ym077")
mesh = SubResource("CylinderMesh_4i132")
surface_material_override/0 = ExtResource("2_ym077")

[node name="finger" type="MeshInstance3D" parent="head/r_arm/r_empty/r_arm_mesh"]
transform = Transform3D(0.179105, 0.0175286, -0.00375808, -0.0157286, 0.171755, 0.0515042, 0.0086015, -0.0509198, 0.172433, 0.136915, 1.15212, -0.0327001)
material_override = ExtResource("2_ym077")
mesh = SubResource("CapsuleMesh_mqckq")

[node name="finger2" type="MeshInstance3D" parent="head/r_arm/r_empty/r_arm_mesh"]
transform = Transform3D(0.179997, 0.000229116, 0.000938515, -0.000366278, 0.177994, 0.0267957, -0.000893947, -0.0267973, 0.177992, -0.00492299, 1.17044, 0.0071913)
material_override = ExtResource("2_ym077")
mesh = SubResource("CapsuleMesh_mqckq")

[node name="finger3" type="MeshInstance3D" parent="head/r_arm/r_empty/r_arm_mesh"]
transform = Transform3D(0.179999, -0.000243536, -0.000634139, 0.000175718, 0.179008, -0.018869, 0.000656175, 0.0188682, 0.179007, -0.160225, 1.17722, 0.00998151)
material_override = ExtResource("2_ym077")
mesh = SubResource("CapsuleMesh_mqckq")

[node name="finger4" type="MeshInstance3D" parent="head/r_arm/r_empty/r_arm_mesh"]
transform = Transform3D(0.139657, -0.108003, 0.0350922, 0.108003, 0.143509, 0.0118566, -0.0350922, 0.0118567, 0.176147, -0.245208, 0.94536, -0.0603803)
material_override = ExtResource("2_ym077")
mesh = SubResource("CapsuleMesh_mqckq")

[node name="palm" type="MeshInstance3D" parent="head/r_arm/r_empty/r_arm_mesh"]
transform = Transform3D(0.170043, -0.0248575, 0.0535485, -0.0587605, -0.0554837, 0.160838, -0.00570525, -0.169422, -0.0605292, 0.00238955, 0.947691, -0.0243956)
material_override = ExtResource("2_ym077")
mesh = SubResource("CylinderMesh_7mtok")

[node name="r_pickaxe" type="CollisionShape3D" parent="head/r_arm"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.65339, -0.246104, -0.940129)

[node name="r_pickaxe_mesh" type="MeshInstance3D" parent="head/r_arm/r_pickaxe"]
transform = Transform3D(0.0792209, 0.00431849, 0.0102658, 2.90166e-05, 0.0736608, -0.0312104, -0.0111372, 0.0309101, 0.0729419, -0.907951, -0.482595, 0.294574)
mesh = ExtResource("6_q6n2l")
surface_material_override/0 = SubResource("StandardMaterial3D_mu1c1")
surface_material_override/1 = SubResource("StandardMaterial3D_81udh")

[node name="l_arm" type="Node3D" parent="head"]

[node name="l_empty" type="CollisionShape3D" parent="head/l_arm"]
transform = Transform3D(-0.0108549, -0.030472, -0.478908, 0.186032, 0.441304, -0.0322954, 0.442351, -0.186339, 0.00182991, -1.01733, -0.478537, 0.218382)
shape = SubResource("CylinderShape3D_11so2")

[node name="l_arm_mesh" type="MeshInstance3D" parent="head/l_arm/l_empty"]
transform = Transform3D(1, -2.98023e-08, -1.49012e-08, 8.9407e-08, 1, -2.98023e-08, 2.23517e-08, -1.49012e-07, 1, 0.010824, -0.000370264, 0.000119686)
material_override = ExtResource("2_ym077")
mesh = SubResource("CylinderMesh_4i132")
surface_material_override/0 = ExtResource("2_ym077")

[node name="finger" type="MeshInstance3D" parent="head/l_arm/l_empty/l_arm_mesh"]
transform = Transform3D(0.179117, 0.0177124, -0.00186926, -0.0172531, 0.17724, 0.0262325, 0.00442193, -0.0259246, 0.178068, 0.136915, 1.16437, 0.0049901)
material_override = ExtResource("2_ym077")
mesh = SubResource("CapsuleMesh_mqckq")

[node name="finger2" type="MeshInstance3D" parent="head/l_arm/l_empty/l_arm_mesh"]
transform = Transform3D(0.179997, 0.000229118, 0.000938515, -0.000366275, 0.177994, 0.0267958, -0.000893947, -0.0267973, 0.177992, -0.00492299, 1.17722, 0.0280548)
material_override = ExtResource("2_ym077")
mesh = SubResource("CapsuleMesh_mqckq")

[node name="finger3" type="MeshInstance3D" parent="head/l_arm/l_empty/l_arm_mesh"]
transform = Transform3D(0.179921, -0.00135804, -0.0051558, 0.0025914, 0.174395, 0.0444953, 0.00465953, -0.04455, 0.174338, -0.128575, 1.16254, -0.042716)
material_override = ExtResource("2_ym077")
mesh = SubResource("CapsuleMesh_mqckq")

[node name="finger4" type="MeshInstance3D" parent="head/l_arm/l_empty/l_arm_mesh"]
transform = Transform3D(0.158557, 0.0849624, 0.00640671, -0.0851875, 0.15834, 0.00845076, -0.00164704, -0.0104761, 0.179687, 0.297773, 0.977207, -0.0911245)
material_override = ExtResource("2_ym077")
mesh = SubResource("CapsuleMesh_mqckq")

[node name="palm" type="MeshInstance3D" parent="head/l_arm/l_empty/l_arm_mesh"]
transform = Transform3D(0.170043, -0.0248575, 0.0535485, -0.0587605, -0.0554837, 0.160838, -0.00570525, -0.169422, -0.0605292, 0.00238955, 0.947691, -0.0243956)
material_override = ExtResource("2_ym077")
mesh = SubResource("CylinderMesh_7mtok")

[node name="l_pickaxe" type="CollisionShape3D" parent="head/l_arm"]
transform = Transform3D(0.911152, -0.16026, -0.37963, 0.0706613, 0.968393, -0.239211, 0.405967, 0.191132, 0.893677, -1.23822, -0.162285, -1.54872)

[node name="l_pickaxe_mesh" type="MeshInstance3D" parent="head/l_arm/l_pickaxe"]
transform = Transform3D(0.0761631, 0.00528316, 0.0239013, -0.00141074, 0.078932, -0.0129518, -0.0244376, 0.0119092, 0.0752395, 0.841968, -0.482595, 0.894946)
mesh = ExtResource("6_q6n2l")
surface_material_override/0 = SubResource("StandardMaterial3D_mu1c1")
surface_material_override/1 = SubResource("StandardMaterial3D_81udh")

[node name="spawner" type="Node3D" parent="."]
script = SubResource("GDScript_ojkxx")

[node name="player_gui" type="CanvasLayer" parent="."]
follow_viewport_enabled = true
script = ExtResource("1_0kysu")

[node name="ui_interact" type="BoxContainer" parent="player_gui"]
layout_direction = 1
anchors_preset = -1
anchor_left = 0.487
anchor_top = 0.593
anchor_right = 0.507
anchor_bottom = 0.632
offset_left = 14.976
offset_top = 27.7359
offset_right = 35.936
offset_bottom = 49.464
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.52, 0.546829)
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="L_interact" type="Label" parent="player_gui/ui_interact"]
layout_mode = 2
size_flags_horizontal = 6
size_flags_vertical = 6
text = "X"
label_settings = SubResource("LabelSettings_wtiho")
horizontal_alignment = 1
vertical_alignment = 1

[node name="R_interact" type="Label" parent="player_gui/ui_interact"]
layout_mode = 2
size_flags_horizontal = 6
size_flags_vertical = 6
text = "X"
label_settings = SubResource("LabelSettings_wtiho")
horizontal_alignment = 1
vertical_alignment = 1

[node name="ui_r_equip" type="BoxContainer" parent="player_gui"]
anchors_preset = -1
anchor_left = 0.569
anchor_top = 0.873
anchor_right = 0.613
anchor_bottom = 0.951
offset_left = -51.488
offset_top = 0.295959
offset_right = -27.176
offset_bottom = 27.752
scale = Vector2(0.65, 0.65)
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="R_equip_ui" type="Sprite2D" parent="player_gui/ui_r_equip"]
modulate = Color(1, 1, 1, 0.501961)
position = Vector2(6.15381, 40)
scale = Vector2(0.6, 0.6)
texture = ExtResource("5_30qmg")

[node name="R_equip" type="Label" parent="player_gui/ui_r_equip"]
layout_mode = 2
text = "R"
label_settings = ExtResource("10_op6uk")
horizontal_alignment = 1
vertical_alignment = 1

[node name="ui_l_equip" type="BoxContainer" parent="player_gui"]
anchors_preset = -1
anchor_left = 0.461
anchor_top = 0.844
anchor_right = 0.523
anchor_bottom = 0.963
offset_left = 3.9281
offset_top = 19.088
offset_right = 16.5042
offset_bottom = 20.976
grow_horizontal = 2
grow_vertical = 0
scale = Vector2(0.65, 0.65)
size_flags_horizontal = 8
size_flags_vertical = 4

[node name="L_equip_ui" type="Sprite2D" parent="player_gui/ui_l_equip"]
modulate = Color(1, 1, 1, 0.501961)
position = Vector2(4.61523, 40)
scale = Vector2(0.6, 0.6)
texture = ExtResource("5_30qmg")

[node name="L_equip" type="Label" parent="player_gui/ui_l_equip"]
layout_mode = 2
text = "L"
label_settings = ExtResource("10_op6uk")
horizontal_alignment = 1
vertical_alignment = 1

[node name="ui_stats" type="BoxContainer" parent="player_gui"]
anchors_preset = -1
anchor_left = 0.396
anchor_top = 0.971
anchor_right = 0.641
anchor_bottom = 0.989
offset_left = -20.192
offset_top = -3.20807
offset_right = 397.568
offset_bottom = -2.87201
grow_horizontal = 2
grow_vertical = 0
scale = Vector2(0.402861, 0.97801)
size_flags_horizontal = 0
size_flags_vertical = 8

[node name="stamina" type="ProgressBar" parent="player_gui/ui_stats"]
modulate = Color(0.831373, 0.709804, 0.231373, 1)
self_modulate = Color(0.658824, 0.576471, 0.223529, 1)
custom_minimum_size = Vector2(700, 12)
layout_mode = 2
size_flags_horizontal = 3
rounded = true
show_percentage = false

[node name="ui_inventory" type="BoxContainer" parent="player_gui"]
offset_right = 40.0
offset_bottom = 40.0

[node name="stone" type="Label" parent="player_gui/ui_inventory"]
visible = false
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 0
text = "stone"
label_settings = SubResource("LabelSettings_hvgyn")
horizontal_alignment = 1
vertical_alignment = 1

[node name="audio_stream_land" type="AudioStreamPlayer3D" parent="."]

[node name="audio_stream_jump" type="AudioStreamPlayer3D" parent="."]
stream = ExtResource("11_38ekj")
volume_db = -13.634
max_db = 2.885
attenuation_filter_db = -21.5

[node name="audio_stream_dash" type="AudioStreamPlayer3D" parent="."]
stream = ExtResource("12_i1p3u")
volume_db = -13.634
max_db = 2.885
attenuation_filter_db = -21.5

[node name="audio_stream_slide" type="AudioStreamPlayer3D" parent="."]
stream = ExtResource("13_x3jmf")
volume_db = -13.634
max_db = 2.885
attenuation_filter_db = -21.5

[node name="HookController" type="Node" parent="." node_paths=PackedStringArray("hook_raycast", "player_body")]
script = ExtResource("12_6jyms")
hook_raycast = NodePath("../head/SpringArm3D/Camera3D/RayCast3D")
player_body = NodePath("..")
launch_action_name = "hook_shot"
retract_action_name = "hook_shot"
pull_speed = 3.0
